{
  "name": "Newsletter",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 6,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -160,
        -180
      ],
      "id": "452ba3b7-0edd-49ac-a2ed-2301de295167",
      "name": "Schedule Trigger1"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nlet html = '<div style=\"font-family: Arial; max-width: 600px;\">';\n\nitems.forEach((item, index) => {\n  const title = item.json.title || 'Brak tytułu';\n  const url = item.json.link || '#';\n  const snippet = (item.json['content:encodedSnippet'] || item.json.content || '').slice(0, 200);\n\n\n  html += `<h3 style=\"color: #e67e22;\">${index + 1}. ${title}</h3>`;\n  html += `<p>${snippet}</p>`;\n  html += `<a href=\"${url}\" style=\"color: #3498db;\">Zobacz artykuł</a><hr>`;\n});\n\nhtml += '</div>';\n\nreturn [{ json: { aggregatedArticles: html } }];\n"
      },
      "id": "afd34708-092f-4562-ac09-5c925dd3cf47",
      "name": "Format Prompt1",
      "type": "n8n-nodes-base.code",
      "position": [
        1380,
        -180
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "ignoreSSL": false
        }
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.1,
      "position": [
        580,
        -180
      ],
      "id": "a101ccef-3c01-4270-8660-f69cf606032c",
      "name": "RSS Read1",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Zbierz wpisy (każdy item to osobny wpis)\nconst allItems = $input.all().map(entry => entry.json);\n\n// Posortuj po dacie malejąco i wybierz 3 najnowsze\nconst recentItems = allItems\n  .sort((a, b) => new Date(b.isoDate || b.pubDate) - new Date(a.isoDate || a.pubDate))\n  .slice(0, 2);\n\n// Zwróć jako osobne elementy\nreturn recentItems.map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        960,
        -180
      ],
      "id": "2f51b196-2f39-486e-be69-6babb145c4c5",
      "name": "Ekstrakcja najnowszych1"
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search.json",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "serpApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "nowości ze świata IT"
            },
            {
              "name": "hl",
              "value": "pl"
            },
            {
              "name": "gl",
              "value": "pl"
            },
            {
              "name": "num",
              "value": "3"
            },
            {
              "value": "nowości o Zabbix"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1688,
        40
      ],
      "id": "11dcdafe-6ae7-4800-85e9-2d201f830795",
      "name": "HTTP Request1",
      "credentials": {
        "serpApi": {
          "id": "<id-serp>",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "GPT-4.1"
        },
        "messages": {
          "values": [
            {
              "content": "=Twoim zadaniem jest stworzenie treści newslettera HTML z najnowszymi newsami w podanych obszarach\n\nOto lista źródeł (tytuł, opis, link) z blogów w formacie HTML:\n{{ $json.aggregatedArticles }}\n\nDodatkowo, aby dodać więcej inspiracji, użyj narzędzia do wyszukiwania w internecie (SerpAPI) podając mu zapytanie, np.:\n\nsearch_internet({ query: \"nowości w świecie IT\", tbs: \"qdr:d\" })\nsearch_internet({ query: \"nowości na temat Zabbixa\", tbs: \"qdr:d\" })\nsearch_internet({ query: \"nowości na temat serwerów Linux\", tbs: \"qdr:d\" })\nsearch_internet({ query: \"nowości na temat Grafana\", tbs: \"qdr:d\" })\n\n\n\nNie opisuj tej funkcji, tylko po prostu ją wywołaj aby jej wynik pomógł stworzyć lepszy newsletter.\n\nNa podstawie **obu źródeł** (RSS i wyszukiwarki) stwórz **spójną całość**:\n– wybierz 5 najciekawszych treści,\n– nie rozdzielaj ich na sekcje,\n– potraktuj wszystko jako jedno źródło inspiracji.\n\nNie dodawaj bloków „inne propozycje” – wszystko zepnij w jeden logiczny newsletter.\n\nGdy już zbierzesz wszystkie potrzebne dane:\n\nZwróć TYLKO poniższy obiekt JSON — bez komentarzy i bez dodatkowego tekstu:\n\n{\n  \"newsletterTitle\": \"Tu wpisz tytuł newslettera po polsku\",\n  \"htmlContent\": \"Tu wstaw cały HTML newslettera – powinien zawierać: <br> - wprowadzenie, <br> - 3–5 sformatowanych artykułów z linkami, <br> - zakończenie np. „Dziękujemy za subskrypcję!”\"\n}\n\nNewsletter powinien być napisany lekkim, inspirującym językiem. Język: polski. Styl: newsletter HTML. Nie dodawaj żadnych instrukcji – tylko czysty JSON.\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "id": "2e81eddd-021e-45e8-9059-bf45eba4a003",
      "name": "Generate HTML Newsletter",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1600,
        -180
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "<id-openai>",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "command": "cat <twoja-ścieżka-pliku>"
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        60,
        -180
      ],
      "id": "aae99bdc-d8f3-4690-908b-9239885e4617",
      "name": "SSH",
      "credentials": {

      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.all().map(i => i.json.stdout).join('\\n');\n\nconst lines = raw\n  .split('\\n')\n  .map(l => l.trim())\n  .filter(l =>\n    l.startsWith('http') && /^https?:\\/\\/\\S+\\.\\S+/.test(l)\n  );\n\nreturn lines.map(link => ({ json: { url: link } }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        -180
      ],
      "id": "a3ff0ee5-3126-4610-afbe-a58c8eeca847",
      "name": "Code"
    },
    {
      "parameters": {
        "fromEmail": "(to podaj mail)",
        "toEmail": "(to podaj mail)",
        "subject": "={{ $json.message.content.newsletterTitle }}",
        "html": "={{ $json.message.content.htmlContent }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1976,
        -180
      ],
      "id": "f1802588-fe59-40d3-9db7-b018ca353120",
      "name": "Send Email",
      "webhookId": "webhookId",
      "credentials": {
        "smtp": {
          "id": "",
          "name": "SMTP account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Format Prompt1": {
      "main": [
        [
          {
            "node": "Generate HTML Newsletter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read1": {
      "main": [
        [
          {
            "node": "Ekstrakcja najnowszych1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ekstrakcja najnowszych1": {
      "main": [
        [
          {
            "node": "Format Prompt1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "ai_tool": [
        [
          {
            "node": "Generate HTML Newsletter",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Generate HTML Newsletter": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "SSH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "RSS Read1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Europe/Warsaw",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "51c66c35-94af-476f-bd1a-6914c18206d2",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "eafe2bbd986238e59814b283c70b7d1fbe21985157b8fc2e91846a1f8d4dd92a"
  },
  "id": "qMkCV5B8zrSNJnEK",
  "tags": []
}